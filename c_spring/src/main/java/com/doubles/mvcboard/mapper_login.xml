<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
<!-- mapper 태그 선언 -->
<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
	<!-- namespace 속성값으로 [DAO 인터페이스명]이 오며 -->
	<!-- [DAO 인터페이스] 메소드명과 동일한 id 값을 소유한 태그를 내포하고 있다. java.util.HashMap-->
<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
<mapper namespace="com.naver.erp.LoginDAO">
	<!--******************************************************-->
	<!-- [로그인 아이디,암호의 존재 개수] 검색하는 select 문을 내포한 <select> 태그 선언 -->
	<!--******************************************************-->
		<!--
			============================
			<select> 태그 속성 설명
			============================
			   id="getAdminIdCnt"        => SQL 구문의 고유 아이디값 설정. DAO 클래스의 메소드 이름과 동일
			   parameterType="hashmap" => SQL 구문에 삽입될 외부 데이터의 자료형 설정
			   resultType="int"		   => SQL 구문의 실행 후 리턴값 자료형 설정
			============================
			 SQL 구문안의 #{HashMap객체키값명} 설명
			============================
				키값에 대응하는 데이터가 
				만약 문자면 '(싱글쿼트)로 감싸 삽입하고 아니면 그대로 삽입한다
			============================
			 SQL 구문안의 ${HashMap객체키값명} 설명
			============================
				키값에 대응하는 데이터의 종류에 관계없이 '(싱글쿼트) 없이 데이터를 그대로 삽입
		-->
	<select id='getAdminIdCnt' parameterType="hashmap" resultType="int">
		select count(*) from admin where admin_id=#{admin_id} and pwd=#{pwd}
	</select>
</mapper>